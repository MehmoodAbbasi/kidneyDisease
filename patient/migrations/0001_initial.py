# Generated by Django 5.1.6 on 2025-02-15 17:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.FloatField()),
                ('bp', models.FloatField(verbose_name='Blood Pressure')),
                ('sg', models.FloatField(verbose_name='Specific Gravity')),
                ('al', models.FloatField(verbose_name='Albumin')),
                ('su', models.FloatField(verbose_name='Sugar')),
                ('rbc', models.CharField(max_length=10, verbose_name='Red Blood Cells')),
                ('pc', models.CharField(max_length=10, verbose_name='Pus Cells')),
                ('pcc', models.CharField(max_length=10, verbose_name='Pus Cell Clumps')),
                ('ba', models.CharField(max_length=10, verbose_name='Bacteria')),
                ('bgr', models.FloatField(verbose_name='Blood Glucose Random')),
                ('bu', models.FloatField(verbose_name='Blood Urea')),
                ('sc', models.FloatField(verbose_name='Serum Creatinine')),
                ('sod', models.FloatField(verbose_name='Sodium')),
                ('pot', models.FloatField(verbose_name='Potassium')),
                ('hemo', models.FloatField(verbose_name='Hemoglobin')),
                ('pcv', models.FloatField(verbose_name='Packed Cell Volume')),
                ('wc', models.FloatField(verbose_name='White Blood Cell Count')),
                ('rc', models.FloatField(verbose_name='Red Blood Cell Count')),
                ('htn', models.CharField(max_length=3, verbose_name='Hypertension')),
                ('dm', models.CharField(max_length=3, verbose_name='Diabetes Mellitus')),
                ('cad', models.CharField(max_length=3, verbose_name='Coronary Artery Disease')),
                ('appet', models.CharField(max_length=10, verbose_name='Appetite')),
                ('pe', models.CharField(max_length=3, verbose_name='Pedal Edema')),
                ('ane', models.CharField(max_length=3, verbose_name='Anemia')),
                ('prediction', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SoulStretch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='yoga_images/')),
                ('video', models.FileField(blank=True, null=True, upload_to='yoga_videos/')),
            ],
        ),
        migrations.CreateModel(
            name='SweatSpot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='workout_images/')),
                ('video', models.FileField(blank=True, null=True, upload_to='workout_videos/')),
            ],
        ),
        migrations.CreateModel(
            name='DietRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diet_type', models.CharField(choices=[('Vegetarian', 'Vegetarian'), ('Non-Vegetarian', 'Non-Vegetarian'), ('Vegan', 'Vegan')], max_length=20)),
                ('cuisine_style', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_notes', models.TextField(blank=True, null=True)),
                ('recommended_meals', models.TextField(help_text='List recommended meals')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='diet', to='patient.patient')),
            ],
        ),
        migrations.CreateModel(
            name='CalorieRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('intake', models.PositiveIntegerField(help_text='Calories consumed')),
                ('burnt', models.PositiveIntegerField(help_text='Calories burnt')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calories', to='patient.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('consultation_type', models.CharField(choices=[('Doctor', 'Doctor'), ('Health Counselor', 'Health Counselor')], max_length=20)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Confirmed', 'Confirmed'), ('Rescheduled', 'Rescheduled'), ('Cancelled', 'Cancelled')], default='Pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='patient.patient')),
            ],
        ),
        migrations.CreateModel(
            name='PatientInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('father_name', models.CharField(max_length=100)),
                ('age', models.PositiveIntegerField()),
                ('address', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient_info', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='patient',
            name='patient_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patients', to='patient.patientinfo'),
        ),
    ]
